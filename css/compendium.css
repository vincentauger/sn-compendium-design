/* Wrapper Section */
.vt-wrapper {
    position: relative;
    scroll-behavior: smooth;
    scroll-snap-type: y;
}

/* Sections / Pages */
.vt-section {
    position: relative;
    min-height: 100vh;
    width: 100vw;
    background-color: white;
    border: #0000ff solid 1px;
    scroll-snap-align: start;
    display: grid;
    align-content: center;
    overflow: hidden;

}

.vt-head {
    min-height: 75vh;
    height: 75vh;
}

@media (max-width: 968px) {
    .vt-head{
        height: 90vh;
    }
}


/* Hero title page */

/* Class to make an image the entire background at all resolutions*/

.vt-hero-background {
    background: url('../assets/img4_large.jpeg') no-repeat center center fixed;
    background-size: cover;
    z-index: -1;

}

.vt-hero-content {
    position: absolute;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
}

/* img elements inside vt-hero-content size is 75% of height */
.vt-hero-content img {
    width: min(60vh, 60vw);
}

.vt-section-header {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: white;
}

.vt-section-header img {
    width: min(60vh, 60vw);
    height: min(30vh, 30vw);
    border-bottom-left-radius: 30vh;
    border-bottom-right-radius: 30vh;
    box-shadow: 0px 8px 12px -1px #BDBDBD;
    box-sizing: content-box;
    overflow: hidden;
}


.vt-intro-background {
    background: url('../assets/img1_large.jpeg');
    background-repeat: no-repeat;
    background-size: cover;
    clip-path: circle(30vh at 50% 50%);
    height: 100%;
    width: 100%;
    top: -87vh;
    position: absolute;


}


/* background colors for sections: red, green, and blue */
.vt-red {
    background-color: #ff0000;
}

.vt-green {
    background-color: #00ff00;
}

.vt-blue {
    background-color: #0000ff;
}


/* Intro Section */

.vt-content-grid {
    display: grid;
    margin-top: 75vh;
    grid-template-columns: 0.25fr 1fr;
    grid-gap: 3vw;
    height: 100%;
    padding: 0 10vw;
    color: grey;
    font-weight: 300;
}

@media (max-width: 800px) {
    .vt-content-grid {
        grid-template-columns: 1fr;
        row-gap: 5vw;
        height: auto;
    }
}

.vt-section-title {
    grid-column: 2;
    text-transform: uppercase;
    font-size: 1.75em;
    font-weight: 400;
    letter-spacing: 0.2em;
    /* grey border 10 px above */

}

.vt-section-subtitle {
    text-transform: uppercase;
    font-size: 1.5rem;
    font-weight: 300;
}

.vt-top-border {
    border-top: 1px solid #9b9a9a;
    padding-top: 10px;
}

/* hide top border if screen smaller */
@media (max-width: 800px) {
    .vt-top-border {
        border-top: none;
        padding-top: 0;
    }
}

.vt-section-text {
    font-size: 1.25em;
    letter-spacing: 0.1em;
    line-height: 1.75em;
}

/* Mocking CSS taken from template not required in module */

/**
 * @file
 * Utility classes to hide elements in different ways.
 */

/**
 * Hide elements from all users.
 *
 * Used for elements which should not be immediately displayed to any user. An
 * example would be collapsible details that will be expanded with a click
 * from a user. The effect of this class can be toggled with the jQuery show()
 * and hide() functions.
 */
 .hidden {
    display: none;
  }

  /**
   * Hide elements visually, but keep them available for screen readers.
   *
   * Used for information required for screen reader users to understand and use
   * the site where visual display is undesirable. Information provided in this
   * manner should be kept concise, to avoid unnecessary burden on the user.
   * "!important" is used to prevent unintentional overrides.
   */
  .visually-hidden {
    position: absolute !important;
    overflow: hidden;
    clip: rect(1px, 1px, 1px, 1px);
    width: 1px;
    height: 1px;
    word-wrap: normal;
  }

  /**
   * The .focusable class extends the .visually-hidden class to allow
   * the element to be focusable when navigated to via the keyboard.
   */
  .visually-hidden.focusable:active,
  .visually-hidden.focusable:focus {
    position: static !important;
    overflow: visible;
    clip: auto;
    width: auto;
    height: auto;
  }

  /**
   * Hide visually and from screen readers, but maintain layout.
   */
  .invisible {
    visibility: hidden;
  }
